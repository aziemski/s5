buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springBootVersion = '2.0.0.M7'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.2")
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: 'org.springframework.boot'

group 's5'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8")
    compile('org.springframework.boot:spring-boot-starter-webflux')
    runtime("org.springframework.boot:spring-boot-devtools")
    testCompile("io.projectreactor:reactor-test")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: "junit"
    }
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

